package com.banking.Service;

import com.banking.Entity.PaymentRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jms.annotation.JmsListener;
import org.springframework.stereotype.Service;

@Service
public class NotificationService {

    @Autowired
    private EmailService emailService;

    /**
     * L·∫Øng nghe message t·ª´ payment queue v√† x·ª≠ l√Ω th√¥ng b√°o
     * @param paymentRequest Th√¥ng tin thanh to√°n t·ª´ queue
     */
    // @JmsListener(destination = "payment.queue") // T·∫°m th·ªùi disable ƒë·ªÉ test
    public void handlePaymentNotification(PaymentRequest paymentRequest) {
        try {
            System.out.println("=== PAYMENT NOTIFICATION ===");
            System.out.println("Payment confirmed for paymentId: " + paymentRequest.getPaymentId());
            System.out.println("Account ID: " + paymentRequest.getAccount().getAccountId());
            System.out.println("Amount: " + paymentRequest.getAmount() + " " + paymentRequest.getCurrency());
            System.out.println("=============================");
            
            // G·ª≠i email th√¥ng b√°o th√†nh c√¥ng
            emailService.sendPaymentConfirmationEmail(paymentRequest);
            
            // G·ª≠i email th√¥ng b√°o cho admin
            emailService.sendAdminNotificationEmail(paymentRequest, "SUCCESS");
            
            // Gi·∫£ l·∫≠p g·ª≠i SMS
            sendSmsNotification(paymentRequest);
            
        } catch (Exception e) {
            System.err.println("Error processing payment notification: " + e.getMessage());
            
            // G·ª≠i email th√¥ng b√°o l·ªói
            try {
                emailService.sendPaymentFailureEmail(paymentRequest, "System error: " + e.getMessage());
                emailService.sendAdminNotificationEmail(paymentRequest, "ERROR");
            } catch (Exception emailError) {
                System.err.println("Error sending failure email: " + emailError.getMessage());
            }
        }
    }

    /**
     * X·ª≠ l√Ω thanh to√°n th·∫•t b·∫°i
     * @param paymentRequest Th√¥ng tin thanh to√°n
     * @param reason L√Ω do th·∫•t b·∫°i
     */
    public void handlePaymentFailure(PaymentRequest paymentRequest, String reason) {
        try {
            System.out.println("=== PAYMENT FAILURE ===");
            System.out.println("Payment failed for paymentId: " + paymentRequest.getPaymentId());
            System.out.println("Reason: " + reason);
            System.out.println("=======================");
            
            // G·ª≠i email th√¥ng b√°o th·∫•t b·∫°i
            emailService.sendPaymentFailureEmail(paymentRequest, reason);
            
            // G·ª≠i email th√¥ng b√°o cho admin
            emailService.sendAdminNotificationEmail(paymentRequest, "FAILED");
            
            // Gi·∫£ l·∫≠p g·ª≠i SMS th·∫•t b·∫°i
            sendSmsFailureNotification(paymentRequest, reason);
            
        } catch (Exception e) {
            System.err.println("Error processing payment failure notification: " + e.getMessage());
        }
    }

    /**
     * Gi·∫£ l·∫≠p g·ª≠i SMS th√¥ng b√°o th√†nh c√¥ng
     * @param paymentRequest Th√¥ng tin thanh to√°n
     */
    private void sendSmsNotification(PaymentRequest paymentRequest) {
        System.out.println("üì± SMS SENT:");
        System.out.println("   To: +84901234567");
        System.out.println("   Message: Payment of " + paymentRequest.getAmount() + 
                          " " + paymentRequest.getCurrency() + " confirmed. ID: " + 
                          paymentRequest.getPaymentId());
    }

    /**
     * Gi·∫£ l·∫≠p g·ª≠i SMS th√¥ng b√°o th·∫•t b·∫°i
     * @param paymentRequest Th√¥ng tin thanh to√°n
     * @param reason L√Ω do th·∫•t b·∫°i
     */
    private void sendSmsFailureNotification(PaymentRequest paymentRequest, String reason) {
        System.out.println("üì± SMS SENT:");
        System.out.println("   To: +84901234567");
        System.out.println("   Message: Payment of " + paymentRequest.getAmount() + 
                          " " + paymentRequest.getCurrency() + " failed. Reason: " + reason);
    }

    /**
     * G·ª≠i email th√¥ng b√°o payment request m·ªõi cho customer
     */
    public void sendPaymentRequestNotification(PaymentRequest paymentRequest) {
        try {
            String customerEmail = paymentRequest.getAccount().getEmail();
            String subject = "Y√™u c·∫ßu thanh to√°n m·ªõi - Banking System";
            
            String htmlContent = createPaymentRequestHtml(paymentRequest);
            
            emailService.sendPaymentRequestEmail(customerEmail, subject, htmlContent);
            
            System.out.println("üìß Payment request notification sent to: " + customerEmail);
            
        } catch (Exception e) {
            System.err.println("‚ùå Error sending payment request notification: " + e.getMessage());
        }
    }

    /**
     * G·ª≠i email th√¥ng b√°o thanh to√°n th·∫•t b·∫°i
     */
    public void sendPaymentFailureEmail(PaymentRequest paymentRequest, String reason) {
        try {
            String customerEmail = paymentRequest.getAccount().getEmail();
            String subject = "Thanh to√°n th·∫•t b·∫°i - Banking System";
            
            String htmlContent = createPaymentFailureHtml(paymentRequest, reason);
            
            emailService.sendPaymentFailureEmail(customerEmail, subject, htmlContent);
            
            System.out.println("üìß Payment failure email sent to: " + customerEmail);
            
        } catch (Exception e) {
            System.err.println("‚ùå Error sending payment failure email: " + e.getMessage());
        }
    }

    /**
     * T·∫°o HTML cho email payment request
     */
    private String createPaymentRequestHtml(PaymentRequest paymentRequest) {
        return "<!DOCTYPE html>" +
                "<html><head><meta charset='UTF-8'><title>Payment Request</title></head>" +
                "<body style='font-family: Arial, sans-serif; background: #f4f4f4; padding: 20px;'>" +
                "<div style='max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px;'>" +
                "<h2 style='color: #333;'>üí≥ Y√™u c·∫ßu thanh to√°n m·ªõi</h2>" +
                "<p>Xin ch√†o " + paymentRequest.getAccount().getCustomerName() + ",</p>" +
                "<p>B·∫°n c√≥ m·ªôt y√™u c·∫ßu thanh to√°n m·ªõi c·∫ßn x·ª≠ l√Ω:</p>" +
                "<div style='background: #f8f9fa; padding: 20px; border-radius: 5px; margin: 20px 0;'>" +
                "<p><strong>S·ªë ti·ªÅn:</strong> " + String.format("%,.0f", paymentRequest.getAmount()) + " " + paymentRequest.getCurrency() + "</p>" +
                "<p><strong>M√¥ t·∫£:</strong> " + (paymentRequest.getDescription() != null ? paymentRequest.getDescription() : "Kh√¥ng c√≥ m√¥ t·∫£") + "</p>" +
                "<p><strong>Ng√†y t·∫°o:</strong> " + paymentRequest.getCreatedAt().toString() + "</p>" +
                "</div>" +
                "<p>Vui l√≤ng ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng ƒë·ªÉ thanh to√°n.</p>" +
                "<p>Tr√¢n tr·ªçng,<br>Banking System</p>" +
                "</div></body></html>";
    }

    /**
     * T·∫°o HTML cho email payment failure
     */
    private String createPaymentFailureHtml(PaymentRequest paymentRequest, String reason) {
        return "<!DOCTYPE html>" +
                "<html><head><meta charset='UTF-8'><title>Payment Failed</title></head>" +
                "<body style='font-family: Arial, sans-serif; background: #f4f4f4; padding: 20px;'>" +
                "<div style='max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px;'>" +
                "<h2 style='color: #dc3545;'>‚ùå Thanh to√°n th·∫•t b·∫°i</h2>" +
                "<p>Xin ch√†o " + paymentRequest.getAccount().getCustomerName() + ",</p>" +
                "<p>Thanh to√°n c·ªßa b·∫°n ƒë√£ th·∫•t b·∫°i:</p>" +
                "<div style='background: #f8d7da; padding: 20px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #dc3545;'>" +
                "<p><strong>S·ªë ti·ªÅn:</strong> " + String.format("%,.0f", paymentRequest.getAmount()) + " " + paymentRequest.getCurrency() + "</p>" +
                "<p><strong>L√Ω do:</strong> " + reason + "</p>" +
                "<p><strong>Ng√†y t·∫°o:</strong> " + paymentRequest.getCreatedAt().toString() + "</p>" +
                "</div>" +
                "<p>Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin v√† th·ª≠ l·∫°i.</p>" +
                "<p>Tr√¢n tr·ªçng,<br>Banking System</p>" +
                "</div></body></html>";
    }
}
